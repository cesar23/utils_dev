enable: true

matches:
  # ===== Documentaci√≥n y formateo =====
  - trigger: "..DocCompleto"
    label: "Formatear y documentar c√≥digo (completo)"
    replace: |
      üìù Formatea el c√≥digo, agrega comentarios y ejemplos de uso. Haz que se vea claro, ordenado y bonito.

  - trigger: "..docFunction"
    label: "Regenerar docs de funciones"
    replace: |
      üß© Elimina los comentarios previos de las funciones y regenera la documentaci√≥n acorde al lenguaje usado.
      Formatea el c√≥digo, agrega comentarios explicativos y ejemplos claros. Ejemplo de documentaci√≥n:
        - @param s: Cadena original (no nula) que se desea transformar en slug.
        - @param caseFormat: Formato de capitalizaci√≥n ("lower", "upper", "capitalize", "title", "none").
        - @return: Cadena en formato slug, lista para URLs o identificadores.
        - @throws: IllegalArgumentException si caseFormat es inv√°lido o la cadena es null.
        - @example: StringUtil.stringSlugify("¬°Hola mundo! Prueba de Slugify.", "title") ‚Üí "Hola-Mundo-Prueba-De-Slugify"
        - @example: StringUtil.stringSlugify("¬°Hola mundo! Prueba de Slugify.", "lower") ‚Üí "hola-mundo-prueba-de-slugify"

  - trigger: "..docCodigo"
    label: "Documentar solo esta parte"
    replace: |
      Agrega documentaci√≥n SOLO a este fragmento. Mant√©n el estilo del proyecto y formatea el c√≥digo.

  - trigger: "..verifyCode"
    label: "Revisar y sugerir mejoras"
    replace: |
      Verifica SOLO este fragmento y sugiere mejoras concretas (nombres, complejidad, errores, edge cases).


  # ===== An√°lisis / explicaci√≥n =====
  - trigger: "..analizaProyecto"
    replace: |
      Analiza mi proyecto lo realic√© para {{form1.proyecto}}.
      Analiza todos los ficheros y si hay un error inf√≥rmame.
      El proyecto esta hecho en el lenguaje {{form1.lenguaje}}.
    vars:
      - name: "form1"
        type: form
        params:
          layout: "este proyecto es para: [[proyecto]] \nLenguaje utilizado: [[lenguaje]]"
          fields:
            proyecto:
              type: text
            lenguaje:
              type: choice # or `choice`
              values:
                - JavaScript
                - TypeScript
                - Python
                - Java
                - PHP
              default: "JavaScript"


  - trigger: "..explica"
    label: "Explicar c√≥digo"
    replace: |
      Explica qu√© hace este c√≥digo con ejemplos simples y casos l√≠mite.

  # ===== Generaci√≥n de c√≥digo =====
  - trigger: "..crud"
    label: "CRUD con ejemplos"
    replace: "Crea un CRUD completo en  con comentarios y ejemplos."
    vars:
      - name: lenguaje
        type: choice
        params:
          values:
            - JavaScript
            - TypeScript
            - Python
            - Java
            - PHP

  - trigger: "..patron"
    label: "Patr√≥n de dise√±o"
    replace: "Implementa el patr√≥n de dise√±o {{patron}} con un ejemplo claro y buenas pr√°cticas."
    vars:
      - name: patron
        type: choice
        params:
          values:
            - Singleton
            - Factory
            - Observer
            - Strategy
            - Adapter
            - Decorator

  # ===== Optimizaci√≥n y refactor =====
  - trigger: "..optimiza"
    label: "Optimizar c√≥digo"
    replace: |
      Optimiza este c√≥digo para mayor rendimiento, legibilidad y mantenibilidad. Explica brevemente los cambios.

  - trigger: "..refactor"
    label: "Refactor seg√∫n buenas pr√°cticas"
    replace: |
      Refactoriza este c√≥digo siguiendo buenas pr√°cticas sin cambiar su comportamiento observable. Incluye before/after breve.

  # ===== Comparativas / dudas =====
  - trigger: "..duda"
    label: "Comparar tecnolog√≠as"
    replace: "Expl√≠came las diferencias entre {{opcion1}} y {{opcion2}} con pros, contras y cu√°ndo usar cada una."
    vars:
      - name: opcion1
        type: text
      - name: opcion2
        type: text
